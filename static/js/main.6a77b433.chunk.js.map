{"version":3,"sources":["common/implementation/Database.ts","components/FairwayInput/FairwayInput.tsx","components/GirInput/GirInput.tsx","components/PuttsInput/PuttsInput.tsx","components/ScoreInput/ScoreInput.tsx","components/ChipShotsInput/ChipShotsInput.tsx","components/SandShotsInput/SandShotsInput.tsx","components/PenaltiesInput/PenaltiesInput.tsx","components/OptionalAdvancedInput/OptionalAdvancedInput.tsx","components/HoleSelectInput/HoleSelectInput.tsx","components/Main/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Database","holes","this","Array","FairwayInput","props","state","value","handleChange","bind","event","setState","FormControl","component","FormLabel","RadioGroup","row","aria-label","name","defaultValue","FormControlLabel","control","Radio","color","label","labelPlacement","Component","GirInput","checked","toggleChecked","Switch","onChange","PuttsInput","TextField","type","inputProps","pattern","ScoreInput","ChipShotsInput","SandShotsInput","PenaltiesInput","OptionalAdvancedInput","open","handleClick","List","disablePadding","ListItem","HoleSelectInput","holeNumber","handleBackwardsClick","handleForwardsClick","IconButton","onClick","min","Main","db","isAdvancedOptionsExpanded","addHole","handleAdvancedOptionsClick","Card","CardContent","className","button","ListItemText","primary","Collapse","in","timeout","unmountOnExit","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6a77b433.chunk.js","sourcesContent":["import { Hole } from \"./Hole\";\n\nexport class Database {\n  holes: Hole[];\n  constructor() {\n    this.holes = new Array<Hole>();\n  }\n}\n","import React, { Component } from 'react';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport { FormControl, RadioGroup, FormControlLabel, FormLabel, Radio } from '@material-ui/core';\n\nclass FairwayInput extends Component<any, { value: string }> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      value: 'CENTER'\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event: React.ChangeEvent<HTMLInputElement>, value: string) {\n    this.setState({ value: value });\n  }\n  public render() {\n    return <div>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"label\">Fairway</FormLabel>\n        <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\n          <FormControlLabel\n            value=\"1\"\n            control={<Radio color=\"primary\" />}\n            label={<UndoIcon></UndoIcon>}\n            labelPlacement=\"bottom\"\n          />\n          <FormControlLabel\n            value=\"2\"\n            control={<Radio color=\"primary\" />}\n            label={<ArrowUpwardIcon></ArrowUpwardIcon>}\n            labelPlacement=\"bottom\"\n          />\n          <FormControlLabel\n            value=\"3\"\n            control={<Radio color=\"primary\" />}\n            label={<RedoIcon></RedoIcon>}\n            labelPlacement=\"bottom\"\n          />\n        </RadioGroup>\n      </FormControl>\n    </div>;\n  }\n}\n\nexport default FairwayInput;\n","import React, { Component } from 'react';\nimport { FormControlLabel, Switch } from '@material-ui/core';\n\nclass GirInput extends Component<any, { checked: boolean }> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      checked: false\n    }\n    this.toggleChecked = this.toggleChecked.bind(this);\n  }\n  public render() {\n    return <div>\n      <FormControlLabel\n        control={<Switch color='primary' checked={this.state.checked} onChange={this.toggleChecked} />}\n        label=\"GIR\"\n        color='secondary'\n      />\n    </div>;\n  }\n  private toggleChecked(event: React.ChangeEvent<HTMLInputElement>, checked: boolean) {\n    this.setState({ checked: checked });\n  }\n}\n\nexport default GirInput;\n","import React, { Component } from 'react';\nimport { TextField } from '@material-ui/core';\n\n\nclass PuttsInput extends Component<any, any> {\n  public render() {\n    return <TextField label=\"Putts\" type=\"number\" inputProps={{ pattern: \"[0-9*]\" }} />;\n  }\n}\n\nexport default PuttsInput;\n","import React, { Component } from 'react';\nimport { TextField } from '@material-ui/core';\n\nclass ScoreInput extends Component<any, any> {\n  public render() {\n    return <TextField label=\"Score\" type=\"number\" inputProps={{ pattern: \"[0-9*]\" }} />;\n  }\n}\n\nexport default ScoreInput;\n","import React, { Component } from 'react';\nimport { TextField } from '@material-ui/core';\n\nclass ChipShotsInput extends Component<any, any> {\n  public render() {\n    return <TextField label=\"Chip Shots\" type=\"number\" inputProps={{ pattern: \"[0-9*]\" }} />;\n  }\n}\n\nexport default ChipShotsInput;\n","import React, { Component } from 'react';\nimport { TextField } from '@material-ui/core';\n\nclass SandShotsInput extends Component<any, any> {\n  public render() {\n    return <TextField label=\"Sand Shots\" type=\"number\" inputProps={{ pattern: \"[0-9*]\" }} />;\n  }\n}\n\nexport default SandShotsInput;\n","import React, { Component } from 'react';\nimport { TextField } from '@material-ui/core';\n\nclass PenaltiesInput extends Component<any, any> {\n  public render() {\n    return <TextField label=\"Penalty Strokes\" type=\"number\" inputProps={{ pattern: \"[0-9*]\" }} />;\n  }\n}\n\nexport default PenaltiesInput;\n","import React, { Component } from 'react';\nimport { List, ListItem } from '@material-ui/core';\n\nimport ChipShotsInput from '../ChipShotsInput/ChipShotsInput';\nimport SandShotsInput from '../SandShotsInput/SandShotsInput';\nimport PenaltiesInput from '../PenaltiesInput/PenaltiesInput';\n\nclass OptionalAdvancedInput extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      open: true\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    this.setState({ open: !this.state.open });\n  }\n  public render() {\n    return <List component=\"div\" disablePadding>\n      <ListItem ><ChipShotsInput></ChipShotsInput></ListItem>\n      <ListItem><SandShotsInput></SandShotsInput></ListItem>\n      <ListItem><PenaltiesInput></PenaltiesInput></ListItem>\n    </List>;\n  }\n}\n\nexport default OptionalAdvancedInput;\n","import React, { Component } from 'react';\nimport { TextField, IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nclass HoleSelectInput extends Component<any, { holeNumber: number }> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      holeNumber: 1\n    }\n    this.handleBackwardsClick = this.handleBackwardsClick.bind(this);\n    this.handleForwardsClick = this.handleForwardsClick.bind(this);\n  }\n  handleBackwardsClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    this.setState({ holeNumber: this.state.holeNumber - 1 });\n  }\n  handleForwardsClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    this.setState({ holeNumber: this.state.holeNumber + 1 });\n  }\n  public render() {\n    return <div>\n      <IconButton onClick={this.handleBackwardsClick}>\n        <ArrowBackIcon></ArrowBackIcon>\n      </IconButton>\n      <TextField label=\"Hole\" type=\"number\" inputProps={{ pattern: \"[0-9*]\", min: \"1\" }} value={this.state.holeNumber} />\n      <IconButton onClick={this.handleForwardsClick}>\n        <ArrowForwardIcon></ArrowForwardIcon>\n      </IconButton>\n    </div>;\n  }\n}\n\nexport default HoleSelectInput;\n","import React, { Component } from 'react';\nimport { Database } from '../../common/implementation/Database';\nimport FairwayInput from '../FairwayInput/FairwayInput';\nimport GirInput from '../GirInput/GirInput';\nimport PuttsInput from '../PuttsInput/PuttsInput';\nimport ScoreInput from '../ScoreInput/ScoreInput';\nimport OptionalAdvancedInput from '../OptionalAdvancedInput/OptionalAdvancedInput';\nimport { List, ListItem, ListItemText, Collapse, Card, CardContent } from '@material-ui/core';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport HoleSelectInput from '../HoleSelectInput/HoleSelectInput';\n\nclass Main extends Component<any, { db: any, isAdvancedOptionsExpanded: boolean }> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      db: new Database(),\n      isAdvancedOptionsExpanded: false\n    }\n    this.addHole = this.addHole.bind(this);\n    this.handleAdvancedOptionsClick = this.handleAdvancedOptionsClick.bind(this);\n  }\n  public render() {\n    return <div>\n      <Card>\n        <CardContent>\n          <List component=\"div\" className=\"center-align\">\n            <ListItem><HoleSelectInput></HoleSelectInput></ListItem>\n            <ListItem><ScoreInput></ScoreInput></ListItem>\n            <ListItem><FairwayInput></FairwayInput></ListItem>\n            <ListItem><GirInput></GirInput></ListItem>\n            <ListItem><PuttsInput></PuttsInput></ListItem>\n            {/* Advanced */}\n            <ListItem button onClick={this.handleAdvancedOptionsClick}>\n              <ListItemText primary=\"More\" />\n              {this.state.isAdvancedOptionsExpanded ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={this.state.isAdvancedOptionsExpanded} timeout=\"auto\" unmountOnExit>\n              <OptionalAdvancedInput></OptionalAdvancedInput>\n            </Collapse>\n          </List>\n        </CardContent>\n      </Card>\n    </div>;\n  }\n  addHole() {\n    this.state.db();\n\n  }\n  handleAdvancedOptionsClick(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    this.setState({ isAdvancedOptionsExpanded: !this.state.isAdvancedOptionsExpanded })\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport Main from './components/Main/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main></Main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}